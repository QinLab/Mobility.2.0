}
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../Mobility.2.0.Save/Saved_file/'
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-05-16.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
d <- readRDS(file = '../../Mobility.2.0.Save/Saved_file/inputProcessing/Rdata/2020-03-15_inputs_from_A.rds')
aa=d$Ot
aa=d$W
aa=d$Ot
aa=d$delta_id
aa=d$SI
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-05-16.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
d <- readRDS(file = '../../Mobility.2.0.Save/Saved_file/inputProcessing/Rdata/2020-03-15_inputs_from_A.rds')
aa=d$SI
library(rmarkdown)
source(file = 'Rdata/date_input.r')
source(file = 'date_input.r')
path_s <- '../../Mobility.2.0.Save/Saved_file/'
for (date_num in length(dates_input)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
input <- readRDS(file=paste0(path_s,'inputProcessing/Rdata/',date_week_finishing,'_inputs_from_A.rds'))
}
### read mobility
d_m <- read.csv(file='../inputs/applemobilitytrends-2020-05-16.csv',stringsAsFactors = FALSE)
### read mobility
d_m <- read.csv(file=path_s,'inputs/applemobilitytrends-2020-05-16.csv',stringsAsFactors = FALSE)
for (date_num in length(dates_input)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
input <- readRDS(file=paste0(path_s,'inputProcessing/Rdata/',date_week_finishing,'_inputs_from_A.rds'))
}
### read mobility
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-05-16.csv'),
stringsAsFactors = FALSE)
# d_m needs 3 colums for "geo_type"            "region"              "transportation_type"
# +one column per dates names as 'X.2020.01.20'
#miss-spelled
# country[-which(as.character(country) %in% as.character(d_m$region))]
# missing for apple: Algeria, China, Dominican_Republic, Ecuador, Iran, Peru, South_Korea,
#corrections to match name in ECDC data
d_m$region[which(d_m$region %in% 'Czech Republic')] <- 'Czechia'
d_m$region[which(d_m$region %in% 'UK')] <- 'United_Kingdom'
d_m$region[which(d_m$region %in% 'United States')] <- 'United_States_of_America'
d_m$region[which(d_m$region %in% 'Saudi Arabia')] <- 'Saudi_Arabia'
d_m$region[which(d_m$region %in% 'Republic of Korea')] <- 'South_Korea'
country <- names(input$D)[-1]
country2 <- country
country2[which(country2 %in% 'United_Kingdom')] <- 'UK'
country2[which(country2 %in% 'United_States_of_America')] <- 'USA'
country2[which(country2 %in% 'South_Korea')] <- 'South Korea'
country2[which(country2 %in% 'Saudi_Arabia')] <- 'Saudi Arabia'
country2[which(country2 %in% 'Dominican_Republic')] <- 'Dominican Rep.'
tab1 <- data.frame(country = country2,
death = colSums(input$D[,-1]),
mobility = rep(NA,length(country)),
mobilityXources = rep(NA,length(country) ))
for (i in 1:length(country)){
tab1$mobility[i] <- round(min(input$M[,i])*100,digits = 1)
tab1$mobilityXources[i] <- min(input$M[,i])
f <- which(d_m$region %in% country[i])
tab1$mobilityXources[i] <- length(f)
}
# write.csv(tab1,file='output/table1.csv')
for (date_num in length(dates_input)){
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
input <- readRDS(file=paste0(path_s,'inputProcessing/Rdata/',date_week_finishing,'_inputs_from_G.rds'))
}
### read mobility
# d_m <- read.csv(file='../inputs/applemobilitytrends-2020-04-26.csv',stringsAsFactors = FALSE)
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),
stringsAsFactors = FALSE)
# d_m needs 3 colums for "geo_type"            "region"              "transportation_type"
# +one column per dates names as 'X.2020.01.20'
#
# #miss-spelled
# country[-which(as.character(country) %in% as.character(d_m$region))]
# missing for apple: Algeria, China, Dominican_Republic, Ecuador, Iran, Peru, South_Korea,
#corrections to match name in ECDC data
d_m$region[which(d_m$region %in% 'United Kingdom')] <- 'United_Kingdom'
d_m$region[which(d_m$region %in% 'United States')] <- 'United_States_of_America'
d_m$region[which(d_m$region %in% 'South Korea')] <- 'South_Korea'
d_m$region[which(d_m$region %in% 'Saudi Arabia')] <- 'Saudi_Arabia'
d_m$region[which(d_m$region %in% 'Dominican Republic')] <- 'Dominican_Republic'
country <- names(input$D)[-1]
country2 <- country
country2[which(country2 %in% 'United_Kingdom')] <- 'UK'
country2[which(country2 %in% 'United_States_of_America')] <- 'USA'
country2[which(country2 %in% 'South_Korea')] <- 'South Korea'
country2[which(country2 %in% 'Saudi_Arabia')] <- 'Saudi Arabia'
country2[which(country2 %in% 'Dominican_Republic')] <- 'Dominican Rep.'
tab2 <- data.frame(country = country2,
death = colSums(input$D[,-1]),
mobility = rep(NA,length(country)),
mobilityXources = rep(NA,length(country) ))
for (i in 1:length(country)){
tab2$mobility[i] <- round(min(input$M[,i])*100,digits = 1)
tab2$mobilityXources[i] <- min(input$M[,i])
f <- which(d_m$region %in% country[i])
tab2$mobilityXources[i] <- length(f)
}
# write.csv(tab1,file='output/table1.csv')
tab <- merge(x = tab1, y = tab2, by = 'country', all = TRUE)
tab$death.x[which(is.na(tab$death.x))] <- tab$death.y[which(is.na(tab$death.x))]
tab <- tab[order(as.character(tab$country)),c(1:3,6,4,7)]
write.csv(tab,file=paste0(path_s,'inputProcessing/Rdata/table1.csv'))
getwd()
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-05-16.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-05-16.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-07-18.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../Mobility.2.0.Save/Saved_file/'
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../../../Box Sync/save_research/Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-07-18.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../../../Box Sync/save_research/Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-07-18.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
i
date_num
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../../../Box Sync/save_research/Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-07-18.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../../../Box Sync/save_research/Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
getwd()
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-07-18.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
rmarkdown::render(input = 'template_input.Rmd',output_options = 'self_contained',
output_file = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-07-18.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',output_options = 'self_contained',
output_file = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-07-18.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',output_options = 'self_contained',
output_file = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
D_source
rmarkdown::render(input = 'template_input.Rmd',output_options = 'self_contained',
output_file = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
library(rmarkdown)
knitr::opts_knit$set(self.contained = FALSE)
library(rmarkdown)
knitr::opts_knit$set(self.contained = FALSE)
source(file = 'date_input.r')
path_s <- '../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/'
for (date_num in 1:length(dates_input)){
for (D_source in c('A','G')){
if (D_source == 'A'){
d_m <- read.csv(file=paste0(path_s,'inputs/applemobilitytrends-2020-07-18.csv')
,stringsAsFactors = FALSE)
}else{
d_m <- read.csv(file=paste0(path_s,'inputs/google.csv'),stringsAsFactors = FALSE)
}
date_week_finishing <-  as.Date(dates_input[date_num],format = '%Y-%m-%d')
rmarkdown::render(input = 'template_input.Rmd',
output_file = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/inputProcessing/input_',
date_week_finishing,'_from_',D_source,'.html'))
}
}
library(rmarkdown)
source(file = 'date_input.r')
path_s <- '../../../../Dropbox (SPH Imperial College)/Mobility.2.0.SaveSaved_file/'
library(knitr)
library(Hmisc)
library(EpiEstim)
library(zoo)
library(latex2exp)
opts_chunk$set(collapse = TRUE)
path_s <- '../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/'
opts_chunk$set(fig.path=paste0(path_s,'inputProcessing/figs/'), fig.keep='high',
dev=c('png'), fig.width=9, fig.height=6, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
sapply(paste0('../Rfunction_library/pre_MCMC/',
(list.files('../Rfunction_library/pre_MCMC/'))),FUN = source)
# read SI
d0 <- readRDS(file=paste0(path_s,'/inputs/data_2020-09-13.rds'))
mu_si <- d0$si_mean
std_si <- d0$si_std
rm(d0)
# mean sd of ditrivution infection to death
mu_id = 18.8
si_std = .45*mu_id
# si <- 2
d <- readRDS(file=paste0(path_s,'/inputs/latest_deaths_wide_no_filter.rds'))
col_n <- names(d)
names(d)[which(col_n %in% 'Dominican_Republic')] <- 'Dominican_R.'
names(d)[which(col_n %in% 'United_States_of_America')] <- 'USA'
d$dates <- as.character(d$dates)
d <- d[-c(1:which(d$dates %in% '2020-01-05')),]
daily_to_weekly <- function(x){
res <- data.frame(dates = seq(x$dates[seq(1,nrow(x),by=7)]),
matrix(NA,nrow = nrow(x)/7,ncol = ncol(d)-1))
for (i in 2:ncol(x)){
temp <- x[,i]
res[,i] <- rowSums(matrix(temp,nrow = nrow(res),ncol = 7,byrow = TRUE))
}
names(res) <- names(x)
return(res)
}
d_weekly <- daily_to_weekly(x = d)
keep <- rep(NA,ncol(d_weekly)-1)
for(i in 2:ncol(d_weekly)){
temp <- paste0(as.numeric(d_weekly[,i] >= 70),collapse = '')
x <- grep(pattern = '1111',x = temp)
if(length(x) == 0){
keep[i-1] <- 0
}else if(x ==1 ){
keep[i-1] <- 1
}else{
break
}
}
# sum(eliminate == 0)
d <- d[,c(1,which(keep ==1) + 1)]
d_weekly <- d_weekly[,c(1,which(keep ==1) + 1)]
country_D <- names(d)[-1]
country_D
rollD <- apply(d[,2:ncol(d)],2,zoo::rollmean,k=7)
obs <- d[4:(nrow(d)-3),2:ncol(d)]
temp <- as.matrix(abs(obs - rollD)/(rollD+1))
f <- which(obs==0)
temp[f] <- NA
elim <- (which(apply(temp,2,mean,na.rm = TRUE)>1))
d <- d[,-(elim+1)]
d_weekly <- d_weekly[,-(elim+1)]
country_D <- names(d)[-1]
country_D
rm(i,keep,temp,x,col_n,rollD,obs,elim,f)
dM <- readRDS(file=paste0(path_s,'/inputs/mobility_raw.rds'))
# apple corrections
dM$apple$region[which(dM$apple$region %in% 'Saudi Arabia')] <- 'Saudi_Arabia'
dM$apple$region[which(dM$apple$region %in% 'South Africa')]<- 'South_Africa'
dM$apple$region[which(dM$apple$region %in% 'United Kingdom')] <- 'United_Kingdom'
dM$apple$region[which(dM$apple$region %in% 'United States')] <- 'USA'
#google corrections
dM$google$region[which(dM$google$region %in% 'Dominican Republic')] <- 'Dominican_R.'
dM$google$region[which(dM$google$region %in% 'Saudi Arabia')] <- 'Saudi_Arabia'
dM$google$region[which(dM$google$region %in% 'South Africa')]<- 'South_Africa'
dM$google$region[which(dM$google$region %in% 'United Kingdom')] <- 'United_Kingdom'
dM$google$region[which(dM$google$region %in% 'United States')] <- 'USA'
# check apple
country_a <- sort(unique((dM$apple$region)))
country_D[-which(country_D %in% country_a)]
f <- which(dM$apple$region %in% country_D)
dM$apple <- dM$apple[f,]
#check google
country_g <- sort(unique(as.character(dM$google$region)))
country_D[-which(country_D %in% country_g)]
f <- which(dM$google$region %in% country_D)
dM$google <- dM$google[f,]
to_eliminate <- intersect(country_D[-which(country_D %in% country_a)],country_D[-which(country_D %in% country_g)])
f <- which(names(d) %in% to_eliminate)
d <- d[,-f]
library(knitr)
library(Hmisc)
library(EpiEstim)
library(zoo)
library(latex2exp)
opts_chunk$set(collapse = TRUE)
path_s <- '../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/'
opts_chunk$set(fig.path=paste0(path_s,'inputProcessing/figs/'), fig.keep='high',
dev=c('png'), fig.width=9, fig.height=6, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
sapply(paste0('../Rfunction_library/pre_MCMC/',
(list.files('../Rfunction_library/pre_MCMC/'))),FUN = source)
# read SI
d0 <- readRDS(file=paste0(path_s,'/inputs/data_2020-09-13.rds'))
mu_si <- d0$si_mean
std_si <- d0$si_std
rm(d0)
# mean sd of ditrivution infection to death
mu_id = 18.8
si_std = .45*mu_id
# si <- 2
d <- readRDS(file=paste0(path_s,'/inputs/latest_deaths_wide_no_filter.rds'))
col_n <- names(d)
names(d)[which(col_n %in% 'Dominican_Republic')] <- 'Dominican_R.'
names(d)[which(col_n %in% 'United_States_of_America')] <- 'USA'
d$dates <- as.character(d$dates)
d <- d[-c(1:which(d$dates %in% '2020-01-05')),]
daily_to_weekly <- function(x){
res <- data.frame(dates = seq(x$dates[seq(1,nrow(x),by=7)]),
matrix(NA,nrow = nrow(x)/7,ncol = ncol(d)-1))
for (i in 2:ncol(x)){
temp <- x[,i]
res[,i] <- rowSums(matrix(temp,nrow = nrow(res),ncol = 7,byrow = TRUE))
}
names(res) <- names(x)
return(res)
}
d_weekly <- daily_to_weekly(x = d)
keep <- rep(NA,ncol(d_weekly)-1)
for(i in 2:ncol(d_weekly)){
temp <- paste0(as.numeric(d_weekly[,i] >= 70),collapse = '')
x <- grep(pattern = '1111',x = temp)
if(length(x) == 0){
keep[i-1] <- 0
}else if(x ==1 ){
keep[i-1] <- 1
}else{
break
}
}
# sum(eliminate == 0)
d <- d[,c(1,which(keep ==1) + 1)]
d_weekly <- d_weekly[,c(1,which(keep ==1) + 1)]
country_D <- names(d)[-1]
country_D
rollD <- apply(d[,2:ncol(d)],2,zoo::rollmean,k=7)
obs <- d[4:(nrow(d)-3),2:ncol(d)]
temp <- as.matrix(abs(obs - rollD)/(rollD+1))
f <- which(obs==0)
temp[f] <- NA
elim <- (which(apply(temp,2,mean,na.rm = TRUE)>1))
d <- d[,-(elim+1)]
d_weekly <- d_weekly[,-(elim+1)]
country_D <- names(d)[-1]
country_D
rm(i,keep,temp,x,col_n,rollD,obs,elim,f)
# remove any records prior 17-02-2020
library(knitr)
library(Hmisc)
library(EpiEstim)
library(zoo)
library(latex2exp)
opts_chunk$set(collapse = TRUE)
path_s <- '../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/'
opts_chunk$set(fig.path=paste0(path_s,'inputProcessing/figs/'), fig.keep='high',
dev=c('png'), fig.width=9, fig.height=6, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
sapply(paste0('../Rfunction_library/pre_MCMC/',
(list.files('../Rfunction_library/pre_MCMC/'))),FUN = source)
# read SI
d0 <- readRDS(file=paste0(path_s,'/inputs/data_2020-09-13.rds'))
mu_si <- d0$si_mean
std_si <- d0$si_std
rm(d0)
# mean sd of ditrivution infection to death
mu_id = 18.8
si_std = .45*mu_id
# si <- 2
d <- readRDS(file=paste0(path_s,'/inputs/latest_deaths_wide_no_filter.rds'))
