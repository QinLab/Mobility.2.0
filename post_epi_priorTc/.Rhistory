Mdata = data_stream[12]
country <- names(inputs$D)[-1]
M <- inputs$M_process_mat[[Mdata]]/100
H <- inputs$H
m <- M
m[is.na(M)] <- 1
which(colSums(!is.na(M))>0)
which(colSums(!is.na(M))>0)
data_stream
M <- inputs$M_process_mat[[Mdata]]/100
f.na <- which(colSums(!is.na(M))>0)
M[,f] <- inputs$M_process_mat[['Apple_c']]/100
f.na <- which(colSums(!is.na(M))>0)
aa= inputs$M_process_mat[['Apple_c']]
bb= inputs$M_process_mat[['Google_c']]
cc=inputs$M_process_mat[[Mdata]]
country <- names(inputs$D)[-1]
M <- inputs$M_process_mat[[Mdata]]/100
f.na <- which(colSums(!is.na(M))>0)
M[,f.na] <- inputs$M_process_mat[['Apple_c']][,f.na]/100
f.na <- which(colSums(!is.na(M))>0)
M[,f.na] <- inputs$M_process_mat[['Google_c']][,f.na]/100
which(colSums(!is.na(M))>0)
M <- inputs$M_process_mat[[Mdata]]/100
nrow(M)
M <- inputs$M_process_mat[[Mdata]]/100
f.na <- which(colSums(is.na(M))>nrow(M))
f.na
which(colSums(is.na(M))>nrow(M))
f.na <- which(colSums(is.na(M))==nrow(M))
f.na
colSums(is.na(M))
M <- inputs$M_process_mat[[Mdata]]/100
colSums(is.na(M))
View(M)
M <- inputs$M_process_mat[[Mdata]]/100
which(colSums(!is.na(M))>0)
f
range(inputs$D$dates)
inputs<- readRDS(file=
'../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/inputProcessing/Rdata/inputs.rds')
names(inputs)
data_stream <- names(inputs$M_process_mat )
# for(i in 1:length(data_stream)){
#   dir.create(path = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/figure1/figs/',data_stream[i]))
# }
res_base <- readRDS(file =
paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/EpiEstim/Rdata/output_EpiE.rds' ))
si <- 2
Mdata = data_stream[12]
country <- names(inputs$D)[-1]
M <- inputs$M_process_mat[[Mdata]]/100
H <- inputs$H
m <- M
m[is.na(M)] <- 1
i=1
f <- seq(4,nrow(res_base[[si]]$resEpi$S_below.5),by=7)
f <- f[which(res_base[[si]]$resEpi$S_below.5[f,i+1])]
x <- 1- H %*% ( m[,i])  #1-res_summary$results_meff$median_meff[f,i+1]-.5e-2
x <- x[f]
y <- res_base[[si]]$resEpi$median_R[f,i+1]
yplus <- res_base[[si]]$resEpi$up_R[f,i+1]
yminus <- res_base[[si]]$resEpi$low_R[f,i+1]
n_est <- length(x)
allowed_change <- as.Date(c("2020-03-02","2020-04-06",
"2020-05-04","2020-06-01","2020-07-06"),
format = '%Y-%m-%d')
AIC <- rep(NA,length(allowed_change)+1)
# models
m0 <- glm(log(y) ~ x)
summary(m0)
AIC[1] <- m0$aic
# tc
for (k in 1:length(allowed_change)){
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
if(length(f1a)>2 & length(f1b)>2  ){
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
summary(m1a)
summary(m1b)
AIC[k+1] <- m1a$aic + m1b$aic
}
}
AIC
#best predictions
k <- which(AIC[2:length(allowed_change)] == min(AIC[2:length(allowed_change)],na.rm = TRUE))
k
AIC
#best predictions
k <- which(AIC[2:length(allowed_change)] == min(AIC[2:length(allowed_change)],na.rm = TRUE))
x_pred <- seq(from = -1,to = 1,length.out = 1e2)
pred <- exp(m0$coefficients[1] + m0$coefficients[2]*x_pred)
# if (sum(!is.na(AIC))
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
pred2 <- cbind(exp(m1a$coefficients[1] + m1a$coefficients[2]*x_pred),
exp(m1b$coefficients[1] + m1b$coefficients[2]*x_pred))
Hmisc::errbar(x = inputs$D$dates[f],
y = y,
yplus = yplus,
yminus = yminus,
xlim = c(allowed_change[1],range(inputs$D$dates)[2]),
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
abline(v = allowed_change[k-1],lty = 2,lwd=2,col='darkorange')
title(country[i])
Hmisc::errbar(x = x,
y = y,
yplus = yplus,
yminus = yminus,
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
# if (k==1){
lines(x_pred,pred,lwd=2,col='black')
# }else{
lines(x_pred,pred2[,1],lwd=2,col='blue3')
lines(x_pred,pred2[,2],lwd=2,col='red3')
# }
legend('topright',legend = AIC)
Hmisc::errbar(x = inputs$D$dates[f],
y = y,
yplus = yplus,
yminus = yminus,
xlim = c(allowed_change[1],range(inputs$D$dates)[2]),
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
abline(v = allowed_change[k-1],lty = 2,lwd=2,col='darkorange')
title(country[i])
Hmisc::errbar(x = x,
y = y,
yplus = yplus,
yminus = yminus,
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
# if (k==1){
lines(x_pred,pred,lwd=2,col='black')
# }else{
lines(x_pred,pred2[,1],lwd=2,col='blue3')
lines(x_pred,pred2[,2],lwd=2,col='red3')
# }
legend('topright',legend = round(AIC),lwd=1,bty='n')
for (i in which(colSums(!is.na(M))>0)){
# plot Rt against rough mobility
f <- seq(4,nrow(res_base[[si]]$resEpi$S_below.5),by=7)
f <- f[which(res_base[[si]]$resEpi$S_below.5[f,i+1])]
x <- 1- H %*% ( m[,i])  #1-res_summary$results_meff$median_meff[f,i+1]-.5e-2
x <- x[f]
y <- res_base[[si]]$resEpi$median_R[f,i+1]
yplus <- res_base[[si]]$resEpi$up_R[f,i+1]
yminus <- res_base[[si]]$resEpi$low_R[f,i+1]
n_est <- length(x)
allowed_change <- as.Date(c("2020-03-02","2020-04-06",
"2020-05-04","2020-06-01","2020-07-06"),
format = '%Y-%m-%d')
AIC <- rep(NA,length(allowed_change)+1)
# models
m0 <- glm(log(y) ~ x)
summary(m0)
AIC[1] <- m0$aic
# tc
for (k in 1:length(allowed_change)){
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
if(length(f1a)>2 & length(f1b)>2  ){
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
summary(m1a)
summary(m1b)
AIC[k+1] <- m1a$aic + m1b$aic
}
}
#best predictions
k <- which(AIC[2:length(allowed_change)] == min(AIC[2:length(allowed_change)],na.rm = TRUE))
x_pred <- seq(from = -1,to = 1,length.out = 1e2)
pred <- exp(m0$coefficients[1] + m0$coefficients[2]*x_pred)
# if (sum(!is.na(AIC))
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
pred2 <- cbind(exp(m1a$coefficients[1] + m1a$coefficients[2]*x_pred),
exp(m1b$coefficients[1] + m1b$coefficients[2]*x_pred))
# }
### plot
Hmisc::errbar(x = inputs$D$dates[f],
y = y,
yplus = yplus,
yminus = yminus,
xlim = c(allowed_change[1],range(inputs$D$dates)[2]),
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
abline(v = allowed_change[k-1],lty = 2,lwd=2,col='darkorange')
title(country[i])
Hmisc::errbar(x = x,
y = y,
yplus = yplus,
yminus = yminus,
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
# if (k==1){
lines(x_pred,pred,lwd=2,col='black')
# }else{
lines(x_pred,pred2[,1],lwd=2,col='blue3')
lines(x_pred,pred2[,2],lwd=2,col='red3')
# }
legend('topright',legend = round(AIC),lwd=1,bty='n')
}
i
# plot Rt against rough mobility
f <- seq(4,nrow(res_base[[si]]$resEpi$S_below.5),by=7)
f <- f[which(res_base[[si]]$resEpi$S_below.5[f,i+1])]
x <- 1- H %*% ( m[,i])  #1-res_summary$results_meff$median_meff[f,i+1]-.5e-2
x <- x[f]
y <- res_base[[si]]$resEpi$median_R[f,i+1]
yplus <- res_base[[si]]$resEpi$up_R[f,i+1]
yminus <- res_base[[si]]$resEpi$low_R[f,i+1]
n_est <- length(x)
allowed_change <- as.Date(c("2020-03-02","2020-04-06",
"2020-05-04","2020-06-01","2020-07-06"),
format = '%Y-%m-%d')
AIC <- rep(NA,length(allowed_change)+1)
# models
m0 <- glm(log(y) ~ x)
summary(m0)
AIC[1] <- m0$aic
# tc
for (k in 1:length(allowed_change)){
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
if(length(f1a)>2 & length(f1b)>2  ){
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
summary(m1a)
summary(m1b)
AIC[k+1] <- m1a$aic + m1b$aic
}
}
AIC
#best predictions
k <- which(AIC[2:length(allowed_change)] == min(AIC[2:length(allowed_change)],na.rm = TRUE))
for (i in which(colSums(!is.na(M))>0)){
# plot Rt against rough mobility
f <- seq(4,nrow(res_base[[si]]$resEpi$S_below.5),by=7)
f <- f[which(res_base[[si]]$resEpi$S_below.5[f,i+1])]
x <- 1- H %*% ( m[,i])  #1-res_summary$results_meff$median_meff[f,i+1]-.5e-2
x <- x[f]
y <- res_base[[si]]$resEpi$median_R[f,i+1]
yplus <- res_base[[si]]$resEpi$up_R[f,i+1]
yminus <- res_base[[si]]$resEpi$low_R[f,i+1]
n_est <- length(x)
allowed_change <- as.Date(c("2020-03-02","2020-04-06",
"2020-05-04","2020-06-01","2020-07-06"),
format = '%Y-%m-%d')
AIC <- rep(NA,length(allowed_change)+1)
# models
m0 <- glm(log(y) ~ x)
summary(m0)
AIC[1] <- m0$aic
# tc
for (k in 1:length(allowed_change)){
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
if(length(f1a)>2 & length(f1b)>2  ){
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
summary(m1a)
summary(m1b)
AIC[k+1] <- m1a$aic + m1b$aic
}
}
#best predictions
k <- which(AIC[2:(length(allowed_change)+1)] == min(AIC[2:(length(allowed_change)+1)],na.rm = TRUE))
x_pred <- seq(from = -1,to = 1,length.out = 1e2)
pred <- exp(m0$coefficients[1] + m0$coefficients[2]*x_pred)
# if (sum(!is.na(AIC))
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
pred2 <- cbind(exp(m1a$coefficients[1] + m1a$coefficients[2]*x_pred),
exp(m1b$coefficients[1] + m1b$coefficients[2]*x_pred))
# }
### plot
Hmisc::errbar(x = inputs$D$dates[f],
y = y,
yplus = yplus,
yminus = yminus,
xlim = c(allowed_change[1],range(inputs$D$dates)[2]),
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
abline(v = allowed_change[k-1],lty = 2,lwd=2,col='darkorange')
title(country[i])
Hmisc::errbar(x = x,
y = y,
yplus = yplus,
yminus = yminus,
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
# if (k==1){
lines(x_pred,pred,lwd=2,col='black')
# }else{
lines(x_pred,pred2[,1],lwd=2,col='blue3')
lines(x_pred,pred2[,2],lwd=2,col='red3')
# }
legend('topright',legend = round(AIC),lwd=1,bty='n')
}
prior_tc
prior_tc <- data.frame(country = country, tc = NA)
layout(matrix(1:4,2,2,byrow = FALSE))
# par(mar = c(bottom, left, top, right)), default  c(5.1, 4.1, 4.1, 2.1).
par(mar = c(2,2,2,1))
inputs<- readRDS(file=
'../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/inputProcessing/Rdata/inputs.rds')
names(inputs)
data_stream <- names(inputs$M_process_mat )
# for(i in 1:length(data_stream)){
#   dir.create(path = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/figure1/figs/',data_stream[i]))
# }
res_base <- readRDS(file =
paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/EpiEstim/Rdata/output_EpiE.rds' ))
si <- 2
for (Mdata in data_stream[12]){
# Mdata = data_stream[12]
# n_country <- length(res_m$country)
# country <- res_m$country
country <- names(inputs$D)[-1]
M <- inputs$M_process_mat[[Mdata]]/100
H <- inputs$H
m <- M
m[is.na(M)] <- 1
prior_tc <- data.frame(country = country, tc = NA)
for (i in which(colSums(!is.na(M))>0)){
# plot Rt against rough mobility
f <- seq(4,nrow(res_base[[si]]$resEpi$S_below.5),by=7)
f <- f[which(res_base[[si]]$resEpi$S_below.5[f,i+1])]
x <- 1- H %*% ( m[,i])  #1-res_summary$results_meff$median_meff[f,i+1]-.5e-2
x <- x[f]
y <- res_base[[si]]$resEpi$median_R[f,i+1]
yplus <- res_base[[si]]$resEpi$up_R[f,i+1]
yminus <- res_base[[si]]$resEpi$low_R[f,i+1]
n_est <- length(x)
allowed_change <- as.Date(c("2020-03-02","2020-04-06",
"2020-05-04","2020-06-01","2020-07-06"),
format = '%Y-%m-%d')
AIC <- rep(NA,length(allowed_change)+1)
# models
m0 <- glm(log(y) ~ x)
summary(m0)
AIC[1] <- m0$aic
# tc
for (k in 1:length(allowed_change)){
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
if(length(f1a)>2 & length(f1b)>2  ){
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
summary(m1a)
summary(m1b)
AIC[k+1] <- m1a$aic + m1b$aic
}
}
#best predictions
k <- which(AIC[2:(length(allowed_change)+1)] == min(AIC[2:(length(allowed_change)+1)],na.rm = TRUE))
x_pred <- seq(from = -1,to = 1,length.out = 1e2)
pred <- exp(m0$coefficients[1] + m0$coefficients[2]*x_pred)
# if (sum(!is.na(AIC))
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
pred2 <- cbind(exp(m1a$coefficients[1] + m1a$coefficients[2]*x_pred),
exp(m1b$coefficients[1] + m1b$coefficients[2]*x_pred))
# }
### plot
Hmisc::errbar(x = inputs$D$dates[f],
y = y,
yplus = yplus,
yminus = yminus,
xlim = c(allowed_change[1],range(inputs$D$dates)[2]),
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
abline(v = allowed_change[k],lty = 2,lwd=2,col='darkorange')
title(country[i])
Hmisc::errbar(x = x,
y = y,
yplus = yplus,
yminus = yminus,
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
# if (k==1){
lines(x_pred,pred,lwd=2,col='black')
# }else{
lines(x_pred,pred2[,1],lwd=2,col='blue3')
lines(x_pred,pred2[,2],lwd=2,col='red3')
# }
legend('topright',legend = round(AIC),lwd=1,bty='n')
prior_tc$tc[i] <- allowed_change[k]
}
saveRDS(file = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/post_epi_priorTc/',Mdata,'_prior_tc_.rds'),prior_tc)
}
View(prior_tc)
prior_tc$tc <- as.Date(prior_tc$tc)
prior_tc <- data.frame(country = country, tc = as.Date(NA))
layout(matrix(1:4,2,2,byrow = FALSE))
# par(mar = c(bottom, left, top, right)), default  c(5.1, 4.1, 4.1, 2.1).
par(mar = c(2,2,2,1))
inputs<- readRDS(file=
'../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/inputProcessing/Rdata/inputs.rds')
names(inputs)
data_stream <- names(inputs$M_process_mat )
# for(i in 1:length(data_stream)){
#   dir.create(path = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/figure1/figs/',data_stream[i]))
# }
res_base <- readRDS(file =
paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/EpiEstim/Rdata/output_EpiE.rds' ))
si <- 2
for (Mdata in data_stream[12]){
# Mdata = data_stream[12]
# n_country <- length(res_m$country)
# country <- res_m$country
country <- names(inputs$D)[-1]
M <- inputs$M_process_mat[[Mdata]]/100
H <- inputs$H
m <- M
m[is.na(M)] <- 1
prior_tc <- data.frame(country = country, tc = as.Date(NA))
for (i in which(colSums(!is.na(M))>0)){
# plot Rt against rough mobility
f <- seq(4,nrow(res_base[[si]]$resEpi$S_below.5),by=7)
f <- f[which(res_base[[si]]$resEpi$S_below.5[f,i+1])]
x <- 1- H %*% ( m[,i])  #1-res_summary$results_meff$median_meff[f,i+1]-.5e-2
x <- x[f]
y <- res_base[[si]]$resEpi$median_R[f,i+1]
yplus <- res_base[[si]]$resEpi$up_R[f,i+1]
yminus <- res_base[[si]]$resEpi$low_R[f,i+1]
n_est <- length(x)
allowed_change <- as.Date(c("2020-03-02","2020-04-06",
"2020-05-04","2020-06-01","2020-07-06"),
format = '%Y-%m-%d')
AIC <- rep(NA,length(allowed_change)+1)
# models
m0 <- glm(log(y) ~ x)
summary(m0)
AIC[1] <- m0$aic
# tc
for (k in 1:length(allowed_change)){
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
if(length(f1a)>2 & length(f1b)>2  ){
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
summary(m1a)
summary(m1b)
AIC[k+1] <- m1a$aic + m1b$aic
}
}
#best predictions
k <- which(AIC[2:(length(allowed_change)+1)] == min(AIC[2:(length(allowed_change)+1)],na.rm = TRUE))
x_pred <- seq(from = -1,to = 1,length.out = 1e2)
pred <- exp(m0$coefficients[1] + m0$coefficients[2]*x_pred)
# if (sum(!is.na(AIC))
f1a <- which(inputs$D$dates[f] <= allowed_change[k])
f1b <- which(inputs$D$dates[f] > allowed_change[k])
m1a <- glm(log(y[f1a]) ~ x[f1a])
m1b <- glm(log(y[f1b]) ~ x[f1b])
pred2 <- cbind(exp(m1a$coefficients[1] + m1a$coefficients[2]*x_pred),
exp(m1b$coefficients[1] + m1b$coefficients[2]*x_pred))
# }
### plot
Hmisc::errbar(x = inputs$D$dates[f],
y = y,
yplus = yplus,
yminus = yminus,
xlim = c(allowed_change[1],range(inputs$D$dates)[2]),
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
abline(v = allowed_change[k],lty = 2,lwd=2,col='darkorange')
title(country[i])
Hmisc::errbar(x = x,
y = y,
yplus = yplus,
yminus = yminus,
main = country[i],
col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),
errbar.col = c(rep(rgb(0,0,0),n_est-0),rep('red4',0)),bty='n')
# if (k==1){
lines(x_pred,pred,lwd=2,col='black')
# }else{
lines(x_pred,pred2[,1],lwd=2,col='blue3')
lines(x_pred,pred2[,2],lwd=2,col='red3')
# }
legend('topright',legend = round(AIC),lwd=1,bty='n')
prior_tc$tc[i] <- allowed_change[k]
}
# prior_tc$tc <- as.Date(prior_tc$tc)
saveRDS(file = paste0('../../../../Dropbox (SPH Imperial College)/Mobility.2.0.Save/Saved_file/post_epi_priorTc/',Mdata,'_prior_tc_.rds'),prior_tc)
}
View(prior_tc)
